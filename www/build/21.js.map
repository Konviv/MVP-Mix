{"version":3,"sources":["../../src/pages/notifications/notifications.module.ts","../../src/pages/notifications/notifications.ts"],"names":[],"mappings":"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","file":"21.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { NotificationsPage } from './notifications';\n\n@NgModule({\n  declarations: [\n    NotificationsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(NotificationsPage),\n  ],\n})\nexport class NotificationsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.module.ts","import {Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams, AlertController, Platform, Events} from 'ionic-angular';\nimport {LocalNotifications} from '@ionic-native/local-notifications';\n\nimport {TestServiceProvider} from \"../../providers/test-service/test-service\";\nimport {ShareServiceProvider} from \"../../providers/share-service/share-service\";\nimport {share} from \"rxjs/operator/share\";\n\n@IonicPage()\n@Component({\n  selector: 'page-notifications',\n  templateUrl: 'notifications.html',\n})\nexport class NotificationsPage {\n\n  lowBucketTrigger;\n  incomeTrigger;\n  billDueTrigger;\n  billPaidTrigger;\n  badgeCount: number = 0;                // Number of new notifications to display in badge\n\n  newNotifications = [];\n  oldNotifications = [];\n  allNotifications = [\n    {\n      title: \"Buckets running low\",\n      text: \"You have buckets that are below 15% capacity\",\n    },\n    {\n      title: \"Income received\",\n      text: \"Your income has come in\",\n    },\n    {\n      title: \"Upcoming bill\",\n      text: \"You have a bill that is due soon\",\n    },\n    {\n      title: \"Bill paid\",\n      text: \"You have paid off a bill\",\n    }\n  ];\n\n  constructor(public navCtrl: NavController, private plt: Platform, private localNotifications: LocalNotifications,\n              alertCtrl: AlertController, public testService: TestServiceProvider, public events: Events,\n              public shareService: ShareServiceProvider) {\n    this.getNotifications();\n\n    this.plt.ready().then((readySource) => {\n      this.localNotifications.on('schedule', (notification, state) => {\n        let json = JSON.parse(notification.data);\n\n        let alert = alertCtrl.create({\n          title: notification.title,\n          subTitle: json.message\n        });\n        alert.present();\n      });\n    });\n\n    // Find out if trigger is true\n    this.lowBucketTrigger = this.shareService.getLowBucketTrigger();\n    this.incomeTrigger = this.shareService.getIncomeTrigger();\n    this.billDueTrigger = this.shareService.getBillDueTrigger();\n    this.billPaidTrigger = this.shareService.getBillPaidTrigger();\n\n    // Create notifications if trigger is true\n    if (this.lowBucketTrigger == true) {\n      this.bucketsAreLowNotification();\n    }\n    if (this.incomeTrigger == true) {\n      this.incomeReceivedNotification();\n    }\n    if (this.billDueTrigger == true) {\n      this.upcomingBillNotification();\n    }\n    if (this.billPaidTrigger == true) {\n      this.billPaidNotification();\n    }\n  }\n\n  // API Calls ---------------------------------------------------------------------------------------------------------\n\n  // Get past notifications to display\n  getNotifications() {\n    this.testService.getNotifications()\n      .subscribe(\n        data => this.oldNotifications = data,\n        error => alert(error)\n      )\n  }\n\n  // Post notification to database after it has been clicked\n  postNotifications(notification) {\n    console.log(notification);\n    this.testService.postNotifications({\n      name: notification.text,\n      date: new Date()\n    }).subscribe();\n\n    var index = this.newNotifications.indexOf(notification);\n    if (index > -1) {\n      this.newNotifications.splice(index, 1);          // Remove from new notifications\n    }\n    this.decrementBadgeCount();                                   // Decrement badge count\n  }\n\n  // Notifications -----------------------------------------------------------------------------------------------------\n\n  // Create notification for when buckets are below 15%\n  bucketsAreLowNotification() {\n    this.localNotifications.schedule({\n      id: 1,\n      title: this.allNotifications[0].title,\n      text: this.allNotifications[0].text,\n      at: new Date()\n    });\n\n    this.newNotifications.push(this.allNotifications[0]);   // Add new notification to array being displayed\n    this.incrementBadgeCount();\n  }\n\n  // Create notification when income is received\n  incomeReceivedNotification() {\n    this.localNotifications.schedule({\n      id: 2,\n      title: this.allNotifications[1].title,\n      text: this.allNotifications[1].text,\n      at: new Date()\n    });\n\n    this.newNotifications.push(this.allNotifications[1]);   // Add new notification to array being displayed\n    this.incrementBadgeCount();\n  }\n\n  // Create notification when bill due date is coming up\n  upcomingBillNotification() {\n    this.localNotifications.schedule({\n      id: 3,\n      title: this.allNotifications[2].title,\n      text: this.allNotifications[2].text,\n      at: new Date()\n    });\n\n    this.newNotifications.push(this.allNotifications[2]);   // Add new notification to array being displayed\n    this.incrementBadgeCount();\n  }\n\n  // Create notification when a bill has been paid\n  billPaidNotification() {\n    this.localNotifications.schedule({\n      id: 4,\n      title: this.allNotifications[3].title,\n      text: this.allNotifications[3].text,\n      at: new Date()\n    });\n\n    this.newNotifications.push(this.allNotifications[3]);   // Add new notification to array being displayed\n    this.incrementBadgeCount();\n  }\n\n  // Badge count handlers ----------------------------------------------------------------------------------------------\n\n  // Increment badge count for new notifications\n  incrementBadgeCount(): void {\n    this.events.publish('badge:updated', ++this.badgeCount);\n  }\n\n  // Decrement badge count for new notifications\n  decrementBadgeCount(): void {\n\n    // Make sure notifications are never negative\n    if (this.badgeCount == 0) {\n      this.events.publish('badge:updated', this.badgeCount = 0);\n    }\n    else {\n      this.events.publish('badge:updated', --this.badgeCount);\n    }\n  }\n\n  // Clear notification badge number and move notifications to old array\n  resetBadgeCount(): void {\n    this.events.publish('badge:updated', this.badgeCount = 0);\n    for (let i = 0; i < this.newNotifications.length; i++) {\n      this.oldNotifications.push(this.newNotifications[i]);\n    }\n    this.newNotifications.splice(0, this.newNotifications.length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.ts"],"sourceRoot":""}